# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-07-14 18:23
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import newsletter.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dynamic_scraper', '0017_added_order_to_scraped_obj_attr'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Law',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(default='', max_length=300)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date published')),
                ('data_limita', models.DateTimeField(default=newsletter.models.one_day_hence, verbose_name='data limita a votului')),
                ('content', models.TextField(blank=True, default='')),
                ('impact', models.TextField(blank=True, default='')),
                ('solution', models.TextField(blank=True, default='')),
                ('required_votes', models.IntegerField(default=100)),
                ('image', models.ImageField(blank=True, default='Proiectul_Hotararii_de_Guvern.jpg', height_field='height_field', null=True, upload_to=newsletter.models.upload_location, width_field='width_field')),
                ('height_field', models.IntegerField(default=0)),
                ('width_field', models.IntegerField(default=0)),
                ('law_level', models.CharField(blank=True, choices=[('0', 'Na\u021bional'), ('1', 'Regional/Municipal'), ('2', 'Local')], default='Na\u0163ional', max_length=100, verbose_name='Alege nivelul legii')),
                ('url_proiect', models.URLField(default='http://particip.gov.md/')),
                ('file_url_1', models.URLField(blank=True, default='http://particip.gov.md/')),
                ('file_url_2', models.URLField(blank=True, default='http://particip.gov.md/')),
                ('file_url_3', models.URLField(blank=True, default='http://particip.gov.md/')),
                ('yes_votes', models.IntegerField(default=0)),
                ('no_votes', models.IntegerField(default=0)),
                ('checker_runtime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dynamic_scraper.SchedulerRuntime')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, default='Proiectul_Hotararii_de_Guvern.jpg', null=True, upload_to=newsletter.models.upload_location)),
            ],
        ),
        migrations.CreateModel(
            name='Petition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.BooleanField(default=False, verbose_name='Posteaza')),
                ('question', models.CharField(max_length=200, verbose_name='Titlul peti\u0163iei')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date published')),
                ('data_limita', models.DateTimeField(default=newsletter.models.one_day_hence, verbose_name='data limita a votului')),
                ('name', models.CharField(max_length=100, verbose_name='Numele')),
                ('surname', models.CharField(max_length=100, verbose_name='Prenumele')),
                ('user_email', models.CharField(max_length=100, verbose_name='Email')),
                ('petition_level', models.CharField(choices=[('0', 'Na\u021bional'), ('1', 'Regional/Municipal'), ('2', 'Local')], max_length=100, verbose_name='Alege nivelul peti\u021biei')),
                ('petition_topic', models.CharField(choices=[('0', 'Transport/Roads'), ('1', 'Infrastructure'), ('2', 'Safety'), ('3', 'Consumers & Service'), ('4', 'Regional/Municipality'), ('5', 'Population & Migration'), ('6', 'Justice'), ('7', 'Economics'), ('8', 'Education & Science'), ('9', 'Governmental administration'), ('10', 'Governmental support'), ('11', 'Business'), ('12', 'Ecology'), ('13', 'Governmental support'), ('14', 'Health')], max_length=100, verbose_name='Alege domeniul peti\u021biei')),
                ('petition_region', models.CharField(blank=True, choices=[('0', 'Municipiul Chi\u015fin\u0103u'), ('1', 'Municipiul B\u0103l\u0163i'), ('2', 'Municipiul Comrat'), ('3', 'Municipiul Tiraspol'), ('4', 'Municipiul Tighina (Bender)'), ('5', 'Anenii Noi'), ('6', 'Basarabeasca'), ('7', 'Briceni'), ('8', 'Cahul'), ('9', 'C\u0103l\u0103ra\u015fi'), ('10', 'Cantemir'), ('11', 'C\u0103u\u015feni'), ('12', 'Cimi\u015flia'), ('13', 'Dondu\u015feni'), ('14', 'Drochia'), ('15', 'Dubasari'), ('16', 'Edine\u0163'), ('17', 'F\u0103le\u015fti'), ('18', 'Flore\u015fti'), ('19', 'Glodeni'), ('20', 'H\xeence\u015fti'), ('21', 'Ialoveni'), ('22', 'Leova'), ('23', 'Nisporeni'), ('24', 'Ocni\u0163a'), ('25', 'Orhei'), ('26', 'Rezina'), ('27', 'R\xee\u015fcani'), ('28', 'S\xeengerei'), ('29', '\u015eold\u0103ne\u015fti'), ('30', 'Soroca'), ('31', '\u015etefan Vod\u0103'), ('32', 'Str\u0103\u015feni'), ('33', 'Taraclia'), ('34', 'Telene\u015fti'), ('35', 'Ungheni')], max_length=100, null=True, verbose_name='Daca peti\u0163ia e de nivel local sau regional, alege regiunea/municipiul ')),
                ('content', models.TextField(verbose_name='Descrierea problemei')),
                ('impact', models.TextField(verbose_name='Impactul')),
                ('solution', models.TextField(verbose_name='Solu\u0163ia')),
                ('required_votes', models.IntegerField(default=100)),
                ('allow_comments', models.BooleanField(default=True, verbose_name='allow comments')),
                ('image', models.ImageField(blank=True, default='Proiectul_Hotararii_de_Guvern.jpg', height_field='height_field', null=True, upload_to=newsletter.models.upload_location, width_field='width_field')),
                ('height_field', models.IntegerField(default=0)),
                ('width_field', models.IntegerField(default=0)),
                ('yes_votes', models.IntegerField(default=0)),
                ('no_votes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PetitionVoter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.Petition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ToScrapeWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('scraper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dynamic_scraper.Scraper')),
                ('scraper_runtime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dynamic_scraper.SchedulerRuntime')),
            ],
        ),
        migrations.CreateModel(
            name='Voter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.Law')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='law',
            name='news_website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.ToScrapeWebsite'),
        ),
    ]
